Program.Sub.ScreenSU.Start
Gui.frmQuoteCreate..Create
Gui.frmQuoteCreate..Caption("Quote Creation")
Gui.frmQuoteCreate..Size(7365,2865)
Gui.frmQuoteCreate..MinX(0)
Gui.frmQuoteCreate..MinY(0)
Gui.frmQuoteCreate..Position(0,0)
Gui.frmQuoteCreate..BackColor(-2147483633)
Gui.frmQuoteCreate..MousePointer(0)
Gui.frmQuoteCreate..Event(UnLoad,frmQuoteCreate_UnLoad)
Gui.frmQuoteCreate.lbl1.Create(Label,"Step 2: Select File & Process",True,6495,255,0,165,1095,True,0,"Arial",8,-2147483633,0)
Gui.frmQuoteCreate.lbl1.FontStyle(True,False,False,False,False)
Gui.frmQuoteCreate.lbl2.Create(Label,"Step 1: Select Customer",True,4470,255,0,165,240,True,0,"Arial",8,-2147483633,0)
Gui.frmQuoteCreate.lbl2.FontStyle(True,False,False,False,False)
Gui.frmQuoteCreate.txtCustomer.Create(TextBox,"",True,1365,300,0,165,540,True,0,"Arial",8,-2147483643,1)
Gui.frmQuoteCreate.cmdBrowse.Create(Button)
Gui.frmQuoteCreate.cmdBrowse.Size(855,375)
Gui.frmQuoteCreate.cmdBrowse.Position(1650,510)
Gui.frmQuoteCreate.cmdBrowse.Caption("^")
Gui.frmQuoteCreate.cmdBrowse.Event(Click,cmdBrowse_Click)
Gui.frmQuoteCreate.txtFile.Create(TextBox,"",True,6180,300,0,195,1320,True,0,"Arial",8,-2147483643,1)
Gui.frmQuoteCreate.cmdBrowseFile.Create(Button)
Gui.frmQuoteCreate.cmdBrowseFile.Size(600,375)
Gui.frmQuoteCreate.cmdBrowseFile.Position(6435,1290)
Gui.frmQuoteCreate.cmdBrowseFile.Caption("^")
Gui.frmQuoteCreate.cmdBrowseFile.Event(Click,cmdBrowseFile_Click)
Gui.frmQuoteCreate.cmdUploadQuote.Create(Button)
Gui.frmQuoteCreate.cmdUploadQuote.Size(1665,375)
Gui.frmQuoteCreate.cmdUploadQuote.Position(180,1770)
Gui.frmQuoteCreate.cmdUploadQuote.Caption("Upload Quote")
Gui.frmQuoteCreate.cmdUploadQuote.Event(Click,cmdUploadQuote_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.sBuildData.Declare(string)
Program.Sub.Preflight.End

Program.Sub.frmQuoteCreate_UnLoad.Start
f.ODBC.Connection!con.Close
f.Intrinsic.Control.End
Program.Sub.frmQuoteCreate_UnLoad.End

Program.Sub.Main.Start
f.ODBC.Connection!con.opencompanyconnection
f.Intrinsic.UI.SetBrowserHotTypeAhead(true)
gui.frmQuoteCreate..Show
Program.Sub.Main.End

Program.Sub.cmdBrowse_Click.Start
V.Local.sRet.Declare(String)
V.Local.sTitles.Declare(String)
V.Local.iWidths.Declare(String)
V.Local.ssql.Declare(String)

F.intrinsic.string.split("Customer*!*Name Customer","*!*",V.local.sTitles)
F.intrinsic.string.split("2000*!*3000","*!*",V.local.iWidths)

V.Local.ssql.set("select Customer, NAME_CUSTOMER from V_CUSTOMER_MASTER")

F.intrinsic.ui.browser("Select a Customer",con,v.Local.ssql,V.local.sTitles,V.local.iWidths,V.local.sRet)

F.intrinsic.control.if(V.local.sRet,"=","***CANCEL***")
F.intrinsic.control.else
	F.intrinsic.string.split(V.local.sRet,"*!*",V.local.sRet)
	gui.frmQuoteCreate.txtCustomer.Text(v.Local.sRet(0))
F.Intrinsic.Control.endif
Program.Sub.cmdBrowse_Click.End

Program.Sub.uploadQTE.Start
v.Local.dDateNow.Declare(Date)
v.local.sLocation.Declare(string)
v.local.nItemCtr.declare(long)

v.local.fCost.declare(Float)

v.local.sUser1.declare(string)
v.local.stemp.declare(string)
v.local.sUser3.declare(string)
v.local.fExtension.declare(Float)
v.local.fExtTotal.declare(Float)
v.local.sCustDesc.declare(string)
v.local.sSplitDesc.declare(string)
v.local.nSplitCount.declare(Float)
v.local.sCustTag.declare(string)
v.local.sString.declare(string)
v.local.nSplitchar.Declare(long)
v.local.sCustTagSplit.declare(string)
v.local.nCount.declare(long)
v.local.nCount2.declare(long)
v.local.sTax.declare(string)
v.local.nSplitDesc.declare(long)
v.local.sSurveyID.declare(string)
v.local.sRtrFlag.declare(string)
v.local.fLength.declare(Float)
v.local.fWidth.declare(Float)
V.Local.SSQL.Declare(STRING) 
v.Local.sret.Declare(string)
v.Local.sqty.Declare(string)
v.Local.fMatSell.Declare(float)
v.Local.fMatSEtupSell.Declare(float)
v.Local.fMatRunSell.Declare(Float)
V.Local.fLabourRunSell.Declare(float)
v.Local.fLabourSetSell.Declare(float)
v.Local.fLabourTotal.Declare(Float)
v.Local.fLabourSetSell1.Declare(float)
v.Local.fLabourRunSell1.Declare(float)
v.Local.fMaterialSell1.Declare(float)
v.Local.fOutsideSell1.Declare(float)
v.Local.i.Declare(long)
v.Local.ftempret.Declare(float)
v.Local.fRunQty.Declare(float)
v.Local.sAltDesc.Declare(string)
V.Local.ftempqty.Declare(float)
v.Local.ftempcost.Declare(float)
v.Local.dDateNow.Set(v.Ambient.Now)
v.Local.fOMarkup.Declare(float)

v.Local.sfinish.Declare(string)

'Set Values
v.Local.scustomer.Declare(string)
v.Local.scustomer.Set(v.Args.sCust)
v.local.sRouterFSQ.declare(string)
v.Local.sRouterFSQ.Set(v.Args.sFGPart)
v.Local.sLine.Declare(string)
v.Local.sLine.Set(v.Args.sLine)
v.Local.ddatedue.Declare(date)
v.Local.ddatedue.Set(v.Args.sDueDate)
v.local.nOrderQty.declare(float)
v.Local.nOrderQty.Set(v.Args.fQuantityr)
v.local.sDesc.declare(string)
v.Local.sDesc.Set(v.Args.sDesc)
v.local.fPrice.declare(Float)
v.Local.fPrice.Set(v.Args.fPrice)
v.Local.sCustPO.Declare(string)
v.Local.sCustPO.Set(v.Args.sPO)
v.Local.sMat.declare(string)
v.Local.sMat.Set(v.Args.sMat)
v.Local.squoteno.Declare(string)
v.Local.squoteno.Set(v.Args.sQuote)
v.Local.slongdesc.Declare(string)
v.Local.slongdesc.Set(v.Args.sLongDesc)

'Static values
v.Local.suploadtype.Declare(string,"Q")
v.Local.scustomerpart.Declare(string,"")
v.local.sUM.declare(string,"EA")
v.local.sProdLineCD.declare(string,"MI")

F.Intrinsic.String.RPad(V.Local.sUploadType.Trim," ",1,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Customer
F.Intrinsic.String.RPad(V.local.sCustomer.Trim," ",7,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Order Number / Quote
F.Intrinsic.String.RPad(v.Local.squoteno," ",7,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Freight
F.Intrinsic.String.RPad("","0",10,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Blank
F.Intrinsic.String.RPad(" "," ",1,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Blank
F.Intrinsic.String.RPad(" "," ",1,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Date Due
F.Intrinsic.String.Format(V.Local.ddatedue,"YYYYMMDD",V.Local.sTemp)
'F.Intrinsic.String.RPad(""," ",8,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Date Ordered
F.Intrinsic.String.Format(V.Local.dDateNow,"YYYYMMDD",V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Blank 4 user fields
F.Intrinsic.String.RPad(" "," ",120,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'User field 5
F.Intrinsic.String.RPad(" "," ",30,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'GSS User
F.Intrinsic.String.RPad(V.Caller.User," ",8,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Cust PO
F.Intrinsic.String.RPad(V.Local.sCustPO," ",15,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'After Cust PO
F.Intrinsic.String.RPad(" "," ",15,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'FreightCurrencyFlag 1 to used order currency
F.Intrinsic.String.RPad("1"," ",1,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)

'Blank Shipping data not used here except Ship Via and Carrier
'(putting an S would require reading the ShipTo Address and populating it.
F.Intrinsic.String.RPad(" "," ",1,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Ship Via (20) try not putting in the Ship-Via and Carrier V.Screen.FMain!txtShipMethod.Text
F.Intrinsic.String.RPad(" "," ",20,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Carrier code 
F.Intrinsic.String.RPad(" "," ",6,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Was blanking all 382 but reduced for 1 + 20 + 6 above
F.Intrinsic.String.RPad(" "," ",355,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)

'Transfer Location
F.Intrinsic.String.RPad(V.local.sLocation," ",2,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Blank
F.Intrinsic.String.RPad(" "," ",85,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Line Number 3 char
F.Intrinsic.String.RPad(v.Local.sLine," ",3,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Line no zero on the right for record no kinda
F.Intrinsic.String.RPad("0","0",1,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Quantity - note position 1353 will be set to 1 to allow if nOrderQty is negative
F.Intrinsic.Control.If(V.local.nOrderQty,<,0)
		F.Intrinsic.String.Format(V.local.nOrderQty,"000000000.0000",V.Local.sTemp)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Format(V.local.nOrderQty,"000000000.0000",V.Local.sTemp)
F.Intrinsic.Control.EndIf
F.Intrinsic.String.Replace(V.Local.sTemp,".","",V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp,"-","",V.Local.sTemp)
F.Intrinsic.String.LPad(V.Local.sTemp," ",13,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Freight
F.Intrinsic.String.RPad("0","0",10,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'UM not required can pull from inventory
F.Intrinsic.String.RPad(V.Local.sUM.Trim," ",2,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Part
F.Intrinsic.String.RPad(V.local.sRouterFSQ," ",20,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'blank
F.Intrinsic.String.RPad(" "," ",18,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Location
F.Intrinsic.String.RPad(V.local.sLocation," ",2,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'V.Local.sPrice - Try with a value of 1 as in 0.0001 16 (10,6)
F.Intrinsic.String.Format(V.Local.fPrice,"0000000000.000000",V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp,".","",V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'V.Local.sPrice Quote price ?  16 (10,6)
F.Intrinsic.String.Format(V.Local.fPrice,"0000000000.000000",V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp,".","",V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'V.Local.sCost  16 (10,6)
F.Intrinsic.String.Format(V.Local.fCost,"0000000000.000000",V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp,".","",V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'V.Local.sLineDesc
F.Intrinsic.String.Left(V.Local.sDesc,30,V.Local.sTemp)
F.Intrinsic.String.RPad(V.Local.sTemp," ",30,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)

'V.Global.sProdLineCode-not required - This will be required as we are creating items that might not be parts
F.Intrinsic.String.RPad(V.Local.sProdLineCD," ",3,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Date - Line order
F.Intrinsic.String.Format(V.Local.dDateNow,"YYYYMMDD",V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Date - Line promised
'F.Intrinsic.Date.DateAddWorkdays(V.Ambient.Date,V.Local.nLeadtime,V.Local.dDateProm)
'F.Intrinsic.String.Format(V.Local.dDateProm,"YYYYMMDD",V.Local.sTemp)
F.Intrinsic.String.Format(V.Local.ddatedue,"YYYYMMDD",V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'	'User Fields 5 x 30
'User Fields 1 x 30
F.Intrinsic.String.RPad(V.Local.sfinish.Trim," ",30,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp.Left30,v.global.sbuilddata)
'User Fields 1 x 30
F.Intrinsic.String.RPad(" "," ",30,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'User Fields 1 x 30
F.Intrinsic.String.RPad(V.Local.sUser3.Trim," ",30,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp.Left30,v.global.sbuilddata)
'User Fields 2 x 30
F.Intrinsic.String.RPad(" "," ",60,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)

'Blank - This should be Extended Amount 16 length at 1018
'Calculate extension for Credit Limit check
F.Intrinsic.Math.Mult(V.local.nOrderQty,V.Local.fPrice,V.Local.fExtension)
F.Intrinsic.Math.Add(V.Local.fExtTotal,V.Local.fExtension,V.Local.fExtTotal)
F.Intrinsic.String.RPad(" "," ",16,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'NO-DLVR-BEF / MUST-DLVR-BY YYYYMMDD / YYYYMMDD
F.Intrinsic.String.RPad(" "," ",16,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Text fields 10 x 30 and others First character should be T for text
'Customer Desc
F.Intrinsic.String.LimitSplit(V.Local.sCustDesc,30,V.Local.sSplitDesc)
F.Intrinsic.Math.Add(V.Local.sSplitDesc.UBound,1,V.Local.nSplitCount)

F.Intrinsic.String.Rtrim(V.Local.sCustTag,V.Local.sCustTag)
V.Local.sString.Redim(-1,-1)
V.Local.sCustTagSplit.Set("")
F.Intrinsic.String.Concat(V.Local.sCustTagSplit,V.Local.sCustTag,V.Local.sCustTag)
F.Intrinsic.String.Replace(V.Local.sCustTag,V.Ambient.Tab," ",V.Local.sCustTag)
'Place Customer Tag in sString array
F.Intrinsic.String.LimitSplit(V.Local.sCustTag,30,V.Local.sString)
F.Intrinsic.Math.Add(V.Local.sString.UBound,1,V.Local.nSplitChar)

F.Intrinsic.Math.Add(V.Local.sSplitDesc.UBound,V.Local.nSplitChar,V.Local.nSplitChar)
F.Intrinsic.Control.For(V.Local.nCount2,1,V.Local.sString.UBound,1)
	F.Intrinsic.String.Concat("        ",V.Local.sString(V.Local.nCount2),V.Local.sString(V.Local.nCount2))
F.Intrinsic.Control.Next(V.Local.nCount2)
'Redimension 1 greater as counter was incremented to 1 more. 10 is the max as we only send 300 char to text tables
F.Intrinsic.Math.Add(V.Local.nSplitChar,1,V.Local.nCount2)
V.Local.sSplitDesc.RedimPreserve(0,V.Local.nCount2)

V.Local.nCount2.Set(0)
'Then from one position past the number of rows of sSplitDesc add the Cust Tag
F.Intrinsic.Control.For(V.Local.nCount,V.Local.nSplitCount,V.Local.nSplitChar,1)
	V.Local.sSplitDesc(V.Local.nCount).Set(V.Local.sString(v.Local.nCount2))
	F.Intrinsic.Math.Add(V.Local.nCount2,1,V.Local.nCount2)
F.Intrinsic.Control.Next(V.Local.nCount)
F.Intrinsic.Control.If(V.Local.sSplitDesc.UBound,>,-1)
		V.Local.sTemp.Set("T")
		F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
		V.Local.sSplitDesc.RedimPreserve(0,9)
		F.Intrinsic.Control.For(V.Local.nSplitDesc,0,9,1)
			F.Intrinsic.String.Replace(V.Local.sSplitDesc(V.Local.nSplitDesc),V.Ambient.Tab,"",V.Local.sSplitDesc(V.Local.nSplitDesc))
			F.Intrinsic.String.RPad(V.Local.sSplitDesc(V.Local.nSplitDesc)," ",30,V.Local.sTemp)
			F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
		F.Intrinsic.Control.Next(V.Local.nSplitDesc)
	F.Intrinsic.Control.Else
		V.Local.sTemp.Set(" ")
		F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
		F.Intrinsic.String.Replace(V.Local.sTemp,V.Ambient.Tab,"",V.Local.sTemp)
		F.Intrinsic.String.RPad(" "," ",300,V.Local.sTemp)
		F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
F.Intrinsic.Control.EndIf

'DO NOT NEED TAX STATUS FLAG 1351
F.Intrinsic.String.RPad(V.Local.sTax.Trim," ",1,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Blank Line Type / Negative Flag / Price Flag / Suff Inventory 1352 / 1353 / 1354 / 1355
F.Intrinsic.String.RPad(" "," ",1,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Negative Flag 1353 if Quantity is negative set flag to 1 ================================NEGATIVE
F.Intrinsic.Control.If(V.local.nOrderQty,<,0)
		F.Intrinsic.String.RPad("1"," ",1,V.Local.sTemp)
	F.Intrinsic.Control.Else
		F.Intrinsic.String.RPad(" "," ",1,V.Local.sTemp)
F.Intrinsic.Control.EndIf
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'1355 Sufficient Inventory check
F.Intrinsic.String.RPad(" "," ",2,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Survey ID
F.Intrinsic.String.LPad(V.local.sSurveyID.Trim,"0",8,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'V.Local.sRtrFlag
F.Intrinsic.String.RPad(V.Local.sRtrFlag," ",1,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Blank
F.Intrinsic.String.RPad(" "," ",37,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'V.Local.sLength 12 remove decimal
F.Intrinsic.String.Format(V.Local.fLength,"00000000.0000",V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp,".","",V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'V.Local.sWidth 12 (8,4)
F.Intrinsic.String.Format(V.Local.fWidth,"00000000.0000",V.Local.sTemp)
F.Intrinsic.String.Replace(V.Local.sTemp,".","",V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'Blank
F.Intrinsic.String.RPad(" "," ",92,V.Local.sTemp)
F.Intrinsic.String.Concat(v.global.sbuilddata,V.Local.sTemp,v.global.sbuilddata)
'ORDUPCM3 will fill to 4636 string length

F.Intrinsic.String.Concat(v.global.sbuilddata,V.Ambient.NewLine,V.global.sbuilddata)

Program.Sub.uploadQTE.End

Program.Sub.cmdBrowseFile_Click.Start
v.Local.sfile.Declare
F.Intrinsic.UI.ShowOpenFileDialog("",".csv||.xlsx",V.Local.sFile)
F.intrinsic.control.if(v.local.sFile,"=","***CANCEL***")
F.intrinsic.control.else
	gui.frmQuoteCreate.txtFile.Text(v.Local.sfile)
F.Intrinsic.Control.endif
Program.Sub.cmdBrowseFile_Click.End

Program.Sub.cmdUploadQuote_Click.Start
f.Intrinsic.Control.Try
	'Set Default Variables
	v.Local.sFiles.Declare(String)
	v.Local.i.Declare(Long,0)
	v.Local.j.Declare(long)
	v.Static.bBusy.Declare(Boolean)
	v.Local.sContent.Declare(string)
	v.Local.sRowDetail.Declare(string)
	v.Local.sNewPartNumber.Declare(string)
	v.Local.sPartSuffix.Declare(string)
	v.Local.sdescription.Declare(string)
	v.Local.dDueDate.Declare(date,v.Ambient.Now)
	V.Local.lOBOB.Declare(long)
	v.Local.lret.Declare(long)
	V.Local.bCheck.Declare
	V.Local.sLine.Declare
	
	'Check if customer exist
	v.Local.scustomer.Declare(string)
	v.Local.scustomer.Set(v.Screen.frmQuoteCreate!txtCustomer.text)
	v.Local.ssql.Declare(string)
	v.Local.ssql.Set("SELECT * FROM V_CUSTOMER_MASTER WHERE CUSTOMER='{0}'")
	v.Local.sret.Declare(string)
	F.Intrinsic.String.Build(v.Local.ssql,v.Local.scustomer.Trim,v.Local.ssql)
	f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.sret)
	f.Intrinsic.Control.If(v.Local.sret.Trim,=,"")
		f.Intrinsic.UI.Msgbox("Customer not found, please try again.")
		f.Intrinsic.Control.ExitSub
	f.Intrinsic.Control.EndIf
	
	'Add 1 to the max quote number in the system
	v.Local.ssql.Set("select  CAST (max(quote_no) AS INT) from v_QUOTE_HEADER")
	f.ODBC.Connection!con.executeandreturn(v.Local.ssql,v.Local.lret)
	v.Local.lQuote.Declare(long)
	v.Local.lQuote.Set(v.Local.lret)
	f.Intrinsic.Math.Add(v.Local.lQuote,1,v.Local.lQuote)
	v.Local.sQuote.Declare(string)
	f.Intrinsic.String.LPad(v.Local.lQuote,"0",7,v.Local.sQuote)


	'Check if File content is empty
	f.Intrinsic.UI.InvokeWaitDialog("Loading Quote")
	v.Local.sFiles.Set(v.Screen.frmQuoteCreate!txtFile.text)
	f.Intrinsic.Control.For(v.Local.i,0,v.Local.sFiles.UBound,1)
		f.Intrinsic.File.File2String(v.Local.sFiles(V.Local.i),v.Local.sContent)
		f.Intrinsic.String.Split(v.Local.sContent,v.Ambient.NewLine,v.Local.sContent)
		f.Intrinsic.Math.Sub(v.Local.scontent.UBound,1,v.Local.lOBOB)
		f.Intrinsic.Control.For(v.Local.j,1,v.Local.lOBOB,1)
			F.Intrinsic.Control.If(v.local.sContent(v.Local.j).trim,<>,"")
				f.Intrinsic.String.SplitCSV(v.Local.sContent(v.Local.j),v.Local.sRowDetail)
				f.Intrinsic.String.LPad(v.Local.j,"0",3,v.Local.sPartSuffix)
				f.Intrinsic.String.Concat(v.Caller.CompanyCode,v.Local.sQuote,v.Local.sPartSuffix,v.Local.sNewPartNumber)
				f.Intrinsic.Control.CallSub(uploadQTE,"sCUST",v.Local.scustomer.Trim,"sFGPart",v.Local.sNewPartNumber,"fQuantityR",v.Local.sRowDetail(0),"sPO","","sDueDate",v.Local.dDueDate,"fPrice",v.Local.sRowDetail(4),"sDesc",v.Local.sRowDetail(1),"sLongDesc",v.Local.sRowDetail(2),"sMat",v.Local.sRowDetail(3),"sLine",v.Local.sPartSuffix.Trim,"sQuote",v.Local.sQuote)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.j)
	f.Intrinsic.Control.Next(V.Local.i)
	
	v.Local.sfile.Declare(string)
	v.Local.sparams.Declare(string)
	v.Local.sfiledir.Declare(string)
	v.Local.stemp.Declare(string)
	F.Intrinsic.String.Concat("LD",V.Caller.Terminal,V.Caller.CompanyCode,V.Local.sFile)
	F.Intrinsic.String.Concat(V.Caller.FilesDir,"\",V.Local.sFile,V.Local.sFileDir)
	F.Intrinsic.File.String2File(V.Local.sFileDir,V.global.sBuildData)
	'Temp Testing
	F.Intrinsic.String.Concat(V.Caller.TempDir,"\",V.Local.sFile,"-Test.txt",V.Local.sTemp)
	F.Intrinsic.File.String2File(V.Local.sTemp,V.global.sBuildData)
	F.Intrinsic.String.Concat(V.Caller.CompanyCode,"!*!",V.Caller.User,"!*!",V.Local.sFile,V.Local.sParams)
	F.Global.General.CallWrapperSync(6004,V.Local.sParams)
	
	
	F.Intrinsic.String.Concat(V.Caller.FilesDir,"\","ORDQTE.txt",v.Local.stemp)
	f.Intrinsic.File.File2String(v.Local.stemp,v.Local.squote)
	f.Intrinsic.Math.IsNumeric(v.Local.sQuote,v.Local.bCheck)
		
	f.Intrinsic.Control.If(v.Local.bCheck,=,false)
		f.Intrinsic.UI.Msgbox("No quote created, see error log.  Program will now exit.")
		f.Intrinsic.UI.CloseWaitDialog
		F.ODBC.Connection!con.Close
		f.Intrinsic.Control.End
	f.Intrinsic.Control.EndIf
	'Open the Quote Form
	f.Intrinsic.Control.If(v.Local.bCheck)
		f.Intrinsic.Control.For(v.Local.j,1,v.Local.lOBOB,1)
			F.Intrinsic.Control.If(v.local.sContent(v.Local.j).trim,<>,"")
				f.Intrinsic.String.SplitCSV(v.Local.sContent(v.Local.j),v.Local.sRowDetail)
				F.Intrinsic.String.LPad(V.Local.j,"0",3,V.Local.sLine)
				F.Intrinsic.String.Concat(V.Local.sLine,"0",V.Local.sLine)
				v.Local.SSQL.Set("INSERT INTO QUOTE_LN_TEXT (QUOTE_NUMBER,QUOTE_LINE,QUOTE_TYPE,TEXT) VALUES('{0}','{1}0','{2}','{3}')")
				f.Intrinsic.String.Build(v.Local.sSql,v.Local.sQuote,v.Local.sLine,"9999",v.Local.sRowDetail(2),v.Local.SSQL)
				f.ODBC.Connection!con.execute(v.Local.SSQL)
			f.Intrinsic.Control.EndIf
		f.Intrinsic.Control.Next(v.Local.j)
		F.Intrinsic.String.Concat(V.Local.sQuote,"!*!O",v.Local.sparams)
		f.Global.General.CallWrapperAsync(251000,v.local.sparams)
	f.Intrinsic.Control.EndIf
		
	f.Intrinsic.UI.CloseWaitDialog
	F.Intrinsic.Control.CallSub(frmQuoteCreate_UnLoad)
f.Intrinsic.Control.Catch
	f.Intrinsic.UI.Msgbox(v.Ambient.ErrorDescription)
f.Intrinsic.Control.EndTry
Program.Sub.cmdUploadQuote_Click.End

